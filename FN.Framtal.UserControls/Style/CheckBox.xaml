<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="DefaultCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
    <ControlTemplate x:Key="CheckBoxTextTemplate" TargetType="{x:Type CheckBox}">
        <Grid
            x:Name="templateRoot"
            Background="Transparent"
            SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="checkBoxBorder"
                Margin="1"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid x:Name="markGrid">
                    <Path
                        x:Name="optionMark"
                        Margin="1"
                        Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                        Fill="{StaticResource OptionMark.Static.Glyph}"
                        Opacity="0"
                        Stretch="None" />
                    <Rectangle
                        x:Name="indeterminateMark"
                        Margin="2"
                        Fill="{StaticResource OptionMark.Static.Glyph}"
                        Opacity="0" />
                </Grid>
            </Border>
            <TextBlock
                x:Name="contentPresenter"
                Grid.Column="1"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="False"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                Text="{TemplateBinding Content}"
                TextWrapping="Wrap" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                <Setter Property="Padding" Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.MouseOver.Background}" />
                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.MouseOver.Border}" />
                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.MouseOver.Glyph}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Disabled.Background}" />
                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Disabled.Border}" />
                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Disabled.Glyph}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource OptionMark.Pressed.Background}" />
                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource OptionMark.Pressed.Border}" />
                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
                <Setter TargetName="indeterminateMark" Property="Fill" Value="{StaticResource OptionMark.Pressed.Glyph}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TextCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Template" Value="{StaticResource CheckBoxTextTemplate}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="TextAlignLeft" TargetType="CheckBox">
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="FlowDirection" Value="LeftToRight" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="FlowDirection" Value="LeftToRight" />
            </Style>
        </Style.Resources>

        <Setter Property="FlowDirection" Value="RightToLeft" />
    </Style>
</ResourceDictionary>